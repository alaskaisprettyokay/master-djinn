
name: Docker build and push to Artifact Registry

on:
  push:

env:
  PROJECT_ID: jinni-api-microservices
  GAR_REGION: asia-northeast2
  REPOSITORY: master-djinn-test
  # IMAGE: $GITHUB_REF#*/} # pull branch name to use as image name
  IMAGE: ${{ github.ref_name }}

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
    
  login-build-push:
    name: Google cloud login, build, and push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get tag
      id: get-tag
      run: echo ::set-output name=tag::${GITHUB_SHA}
      
    - name: Get repo
      id: get-repo
      run: echo ::set-output name=repo::"${GAR_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}"
      # run: echo ::set-output name=repo::"$GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE"
        
    - id: auth
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        token_format: 'access_token'

    - name: Login to Artifact Registry
      uses: docker/login-action@v1
      with:
        registry: "asia-northeast2-docker.pkg.dev" ## TODO env var
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    # TODO move to front after testing cloud auth
    - name: 'Docker build'
      run: |-
        docker build ./ \
          --tag "$GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    - id: docker-push-tagged
      name: Tag Docker image and push to Google Artifact Registry
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ${{ steps.get-repo.outputs.repo }}:${{ steps.get-tag.outputs.tag }}
          ${{ steps.get-repo.outputs.repo }}:latest
      
      # TODO run tests. If master/staging branch then tag as prod/test and deploy to replace images
      # access Compute Registry to reboot server or whatever based of container
      # gcloud compute instances update-container
